diff --git a/cnn.py b/cnn.py
index 58baeee..3f381fe 100644
--- a/cnn.py
+++ b/cnn.py
@@ -1,3 +1,6 @@
+#!usr/bin/env python2
+#!coding=utf-8
+
 import tensorflow as tf
 import numpy as np
 import os
@@ -116,6 +119,7 @@ def _main():
     output_dim = 1
 
     # Generate training data with real-time augmentation
+    # 参数是为了传给继承父函数的__init__,因为函数本体没有__init__,不能覆盖之前的__init__
     train_datagen = utils.DroneDataGenerator(rotation_range = 0.2,
                                              rescale = 1./255,
                                              width_shift_range = 0.2,
diff --git a/common_flags.py b/common_flags.py
index 49c818e..2f6613e 100644
--- a/common_flags.py
+++ b/common_flags.py
@@ -15,23 +15,23 @@ gflags.DEFINE_string('img_mode', "grayscale", 'Load mode for images, either '
                      'rgb or grayscale')
 
 # Training
-gflags.DEFINE_integer('batch_size', 32, 'Batch size in training and evaluation')
+gflags.DEFINE_integer('batch_size', 64, 'Batch size in training and evaluation')
 gflags.DEFINE_integer('epochs', 100, 'Number of epochs for training')
 gflags.DEFINE_integer('log_rate', 10, 'Logging rate for full model (epochs)')
 gflags.DEFINE_integer('initial_epoch', 0, 'Initial epoch to start training')
 
 # Files
-gflags.DEFINE_string('experiment_rootdir', "./model", 'Folder '
+gflags.DEFINE_string('experiment_rootdir', "/home/zq610/WYZ/deeplearning/network/rpg_public_dronet/model", 'Folder '
                      ' containing all the logs, model weights and results')
-gflags.DEFINE_string('train_dir', "../training", 'Folder containing'
+gflags.DEFINE_string('train_dir', "/media/zq610/2C9BDE0469DC4DFC/ubuntu/dl_dataset/Dornet/training", 'Folder containing'
                      ' training experiments')
-gflags.DEFINE_string('val_dir', "../validation", 'Folder containing'
+gflags.DEFINE_string('val_dir', "/media/zq610/2C9BDE0469DC4DFC/ubuntu/dl_dataset/Dornet/validation", 'Folder containing'
                      ' validation experiments')
-gflags.DEFINE_string('test_dir', "../testing", 'Folder containing'
+gflags.DEFINE_string('test_dir', "./media/zq610/2C9BDE0469DC4DFC/ubuntu/dl_dataset/Dornet/testing", 'Folder containing'
                      ' testing experiments')
 
 # Model
-gflags.DEFINE_bool('restore_model', False, 'Whether to restore a trained'
+gflags.DEFINE_bool('restore_model', True, 'Whether to restore a trained'
                    ' model for training')
 gflags.DEFINE_string('weights_fname', "model_weights.h5", '(Relative) '
                                           'filename of model weights')
diff --git a/data_preprocessing/time_stamp_matching.py b/data_preprocessing/time_stamp_matching.py
index 19b48ef..fef3c85 100644
--- a/data_preprocessing/time_stamp_matching.py
+++ b/data_preprocessing/time_stamp_matching.py
@@ -10,7 +10,7 @@ import re
 import os
 
 # Path to the data extracted from the Udacity dataset
-folder = None #"training"  or "testing"
+folder = '/media/zq610/2C9BDE0469DC4DFC/ubuntu/dl_dataset/Dornet/udacity_dataset2/training' #"training"  or "testing"
 assert folder, "You should provide the dataset folder"
 experiments = glob.glob(folder + "/*")
 
@@ -30,7 +30,7 @@ def getMatching(array1, array2):
     match_idx = []
     for i in array1:
         dist = abs(i - array2)
-        idx = np.where(dist == 0)[0]
+        idx = np.where(dist == 0)[0]    # 当dist=0的时候,就是时间戳对上的时候,就是这张图片是对的
         match_stamps.append(array2[idx])
         match_idx.append(idx)
     return match_stamps, match_idx
@@ -50,7 +50,7 @@ def getSyncSteering(fname, idx):
 # For every bag...
 for exp in experiments:
     # Read images
-    images = [os.path.basename(x) for x in glob.glob(exp + "/images/*.png")]
+    images = [os.path.basename(x) for x in glob.glob(exp + "/images/*.png")]    # glob用于通配符匹配,这里就是找png文件
     im_stamps = []
     for im in images:
         stamp = int(re.sub(r'\.png$', '', im))
diff --git a/model/model_struct.json b/model/model_struct.json
index 1d5a9a5..dc51e41 100644
--- a/model/model_struct.json
+++ b/model/model_struct.json
@@ -1 +1 @@
-{"class_name": "Model", "keras_version": "2.0.2", "backend": "tensorflow", "config": {"input_layers": [["input_1", 0, 0]], "output_layers": [["dense_1", 0, 0], ["activation_8", 0, 0]], "name": "model_1", "layers": [{"class_name": "InputLayer", "name": "input_1", "config": {"batch_input_shape": [null, 200, 200, 1], "dtype": "float32", "name": "input_1", "sparse": false}, "inbound_nodes": []}, {"class_name": "Conv2D", "name": "conv2d_1", "config": {"bias_initializer": {"class_name": "Zeros", "config": {}}, "filters": 32, "kernel_initializer": {"class_name": "VarianceScaling", "config": {"scale": 1.0, "distribution": "uniform", "mode": "fan_avg", "seed": null}}, "kernel_size": [5, 5], "activation": "linear", "activity_regularizer": null, "name": "conv2d_1", "bias_constraint": null, "kernel_constraint": null, "kernel_regularizer": null, "data_format": "channels_last", "bias_regularizer": null, "use_bias": true, "dilation_rate": [1, 1], "padding": "same", "trainable": true, "strides": [2, 2]}, "inbound_nodes": [[["input_1", 0, 0, {}]]]}, {"class_name": "MaxPooling2D", "name": "max_pooling2d_1", "config": {"trainable": true, "data_format": "channels_last", "strides": [2, 2], "padding": "valid", "name": "max_pooling2d_1", "pool_size": [3, 3]}, "inbound_nodes": [[["conv2d_1", 0, 0, {}]]]}, {"class_name": "BatchNormalization", "name": "batch_normalization_1", "config": {"epsilon": 0.001, "gamma_constraint": null, "momentum": 0.99, "beta_regularizer": null, "moving_mean_initializer": {"class_name": "Zeros", "config": {}}, "name": "batch_normalization_1", "center": true, "gamma_regularizer": null, "beta_initializer": {"class_name": "Zeros", "config": {}}, "axis": -1, "gamma_initializer": {"class_name": "Ones", "config": {}}, "scale": true, "moving_variance_initializer": {"class_name": "Ones", "config": {}}, "trainable": true, "beta_constraint": null}, "inbound_nodes": [[["max_pooling2d_1", 0, 0, {}]]]}, {"class_name": "Activation", "name": "activation_1", "config": {"activation": "relu", "trainable": true, "name": "activation_1"}, "inbound_nodes": [[["batch_normalization_1", 0, 0, {}]]]}, {"class_name": "Conv2D", "name": "conv2d_2", "config": {"bias_initializer": {"class_name": "Zeros", "config": {}}, "filters": 32, "kernel_initializer": {"class_name": "VarianceScaling", "config": {"scale": 2.0, "distribution": "normal", "mode": "fan_in", "seed": null}}, "kernel_size": [3, 3], "activation": "linear", "activity_regularizer": null, "name": "conv2d_2", "bias_constraint": null, "kernel_constraint": null, "kernel_regularizer": {"class_name": "L1L2", "config": {"l2": 9.999999747378752e-05, "l1": 0.0}}, "data_format": "channels_last", "bias_regularizer": null, "use_bias": true, "dilation_rate": [1, 1], "padding": "same", "trainable": true, "strides": [2, 2]}, "inbound_nodes": [[["activation_1", 0, 0, {}]]]}, {"class_name": "BatchNormalization", "name": "batch_normalization_2", "config": {"epsilon": 0.001, "gamma_constraint": null, "momentum": 0.99, "beta_regularizer": null, "moving_mean_initializer": {"class_name": "Zeros", "config": {}}, "name": "batch_normalization_2", "center": true, "gamma_regularizer": null, "beta_initializer": {"class_name": "Zeros", "config": {}}, "axis": -1, "gamma_initializer": {"class_name": "Ones", "config": {}}, "scale": true, "moving_variance_initializer": {"class_name": "Ones", "config": {}}, "trainable": true, "beta_constraint": null}, "inbound_nodes": [[["conv2d_2", 0, 0, {}]]]}, {"class_name": "Activation", "name": "activation_2", "config": {"activation": "relu", "trainable": true, "name": "activation_2"}, "inbound_nodes": [[["batch_normalization_2", 0, 0, {}]]]}, {"class_name": "Conv2D", "name": "conv2d_4", "config": {"bias_initializer": {"class_name": "Zeros", "config": {}}, "filters": 32, "kernel_initializer": {"class_name": "VarianceScaling", "config": {"scale": 1.0, "distribution": "uniform", "mode": "fan_avg", "seed": null}}, "kernel_size": [1, 1], "activation": "linear", "activity_regularizer": null, "name": "conv2d_4", "bias_constraint": null, "kernel_constraint": null, "kernel_regularizer": null, "data_format": "channels_last", "bias_regularizer": null, "use_bias": true, "dilation_rate": [1, 1], "padding": "same", "trainable": true, "strides": [2, 2]}, "inbound_nodes": [[["max_pooling2d_1", 0, 0, {}]]]}, {"class_name": "Conv2D", "name": "conv2d_3", "config": {"bias_initializer": {"class_name": "Zeros", "config": {}}, "filters": 32, "kernel_initializer": {"class_name": "VarianceScaling", "config": {"scale": 2.0, "distribution": "normal", "mode": "fan_in", "seed": null}}, "kernel_size": [3, 3], "activation": "linear", "activity_regularizer": null, "name": "conv2d_3", "bias_constraint": null, "kernel_constraint": null, "kernel_regularizer": {"class_name": "L1L2", "config": {"l2": 9.999999747378752e-05, "l1": 0.0}}, "data_format": "channels_last", "bias_regularizer": null, "use_bias": true, "dilation_rate": [1, 1], "padding": "same", "trainable": true, "strides": [1, 1]}, "inbound_nodes": [[["activation_2", 0, 0, {}]]]}, {"class_name": "Add", "name": "add_1", "config": {"name": "add_1", "trainable": true}, "inbound_nodes": [[["conv2d_4", 0, 0, {}], ["conv2d_3", 0, 0, {}]]]}, {"class_name": "BatchNormalization", "name": "batch_normalization_3", "config": {"epsilon": 0.001, "gamma_constraint": null, "momentum": 0.99, "beta_regularizer": null, "moving_mean_initializer": {"class_name": "Zeros", "config": {}}, "name": "batch_normalization_3", "center": true, "gamma_regularizer": null, "beta_initializer": {"class_name": "Zeros", "config": {}}, "axis": -1, "gamma_initializer": {"class_name": "Ones", "config": {}}, "scale": true, "moving_variance_initializer": {"class_name": "Ones", "config": {}}, "trainable": true, "beta_constraint": null}, "inbound_nodes": [[["add_1", 0, 0, {}]]]}, {"class_name": "Activation", "name": "activation_3", "config": {"activation": "relu", "trainable": true, "name": "activation_3"}, "inbound_nodes": [[["batch_normalization_3", 0, 0, {}]]]}, {"class_name": "Conv2D", "name": "conv2d_5", "config": {"bias_initializer": {"class_name": "Zeros", "config": {}}, "filters": 64, "kernel_initializer": {"class_name": "VarianceScaling", "config": {"scale": 2.0, "distribution": "normal", "mode": "fan_in", "seed": null}}, "kernel_size": [3, 3], "activation": "linear", "activity_regularizer": null, "name": "conv2d_5", "bias_constraint": null, "kernel_constraint": null, "kernel_regularizer": {"class_name": "L1L2", "config": {"l2": 9.999999747378752e-05, "l1": 0.0}}, "data_format": "channels_last", "bias_regularizer": null, "use_bias": true, "dilation_rate": [1, 1], "padding": "same", "trainable": true, "strides": [2, 2]}, "inbound_nodes": [[["activation_3", 0, 0, {}]]]}, {"class_name": "BatchNormalization", "name": "batch_normalization_4", "config": {"epsilon": 0.001, "gamma_constraint": null, "momentum": 0.99, "beta_regularizer": null, "moving_mean_initializer": {"class_name": "Zeros", "config": {}}, "name": "batch_normalization_4", "center": true, "gamma_regularizer": null, "beta_initializer": {"class_name": "Zeros", "config": {}}, "axis": -1, "gamma_initializer": {"class_name": "Ones", "config": {}}, "scale": true, "moving_variance_initializer": {"class_name": "Ones", "config": {}}, "trainable": true, "beta_constraint": null}, "inbound_nodes": [[["conv2d_5", 0, 0, {}]]]}, {"class_name": "Activation", "name": "activation_4", "config": {"activation": "relu", "trainable": true, "name": "activation_4"}, "inbound_nodes": [[["batch_normalization_4", 0, 0, {}]]]}, {"class_name": "Conv2D", "name": "conv2d_7", "config": {"bias_initializer": {"class_name": "Zeros", "config": {}}, "filters": 64, "kernel_initializer": {"class_name": "VarianceScaling", "config": {"scale": 1.0, "distribution": "uniform", "mode": "fan_avg", "seed": null}}, "kernel_size": [1, 1], "activation": "linear", "activity_regularizer": null, "name": "conv2d_7", "bias_constraint": null, "kernel_constraint": null, "kernel_regularizer": null, "data_format": "channels_last", "bias_regularizer": null, "use_bias": true, "dilation_rate": [1, 1], "padding": "same", "trainable": true, "strides": [2, 2]}, "inbound_nodes": [[["add_1", 0, 0, {}]]]}, {"class_name": "Conv2D", "name": "conv2d_6", "config": {"bias_initializer": {"class_name": "Zeros", "config": {}}, "filters": 64, "kernel_initializer": {"class_name": "VarianceScaling", "config": {"scale": 2.0, "distribution": "normal", "mode": "fan_in", "seed": null}}, "kernel_size": [3, 3], "activation": "linear", "activity_regularizer": null, "name": "conv2d_6", "bias_constraint": null, "kernel_constraint": null, "kernel_regularizer": {"class_name": "L1L2", "config": {"l2": 9.999999747378752e-05, "l1": 0.0}}, "data_format": "channels_last", "bias_regularizer": null, "use_bias": true, "dilation_rate": [1, 1], "padding": "same", "trainable": true, "strides": [1, 1]}, "inbound_nodes": [[["activation_4", 0, 0, {}]]]}, {"class_name": "Add", "name": "add_2", "config": {"name": "add_2", "trainable": true}, "inbound_nodes": [[["conv2d_7", 0, 0, {}], ["conv2d_6", 0, 0, {}]]]}, {"class_name": "BatchNormalization", "name": "batch_normalization_5", "config": {"epsilon": 0.001, "gamma_constraint": null, "momentum": 0.99, "beta_regularizer": null, "moving_mean_initializer": {"class_name": "Zeros", "config": {}}, "name": "batch_normalization_5", "center": true, "gamma_regularizer": null, "beta_initializer": {"class_name": "Zeros", "config": {}}, "axis": -1, "gamma_initializer": {"class_name": "Ones", "config": {}}, "scale": true, "moving_variance_initializer": {"class_name": "Ones", "config": {}}, "trainable": true, "beta_constraint": null}, "inbound_nodes": [[["add_2", 0, 0, {}]]]}, {"class_name": "Activation", "name": "activation_5", "config": {"activation": "relu", "trainable": true, "name": "activation_5"}, "inbound_nodes": [[["batch_normalization_5", 0, 0, {}]]]}, {"class_name": "Conv2D", "name": "conv2d_8", "config": {"bias_initializer": {"class_name": "Zeros", "config": {}}, "filters": 128, "kernel_initializer": {"class_name": "VarianceScaling", "config": {"scale": 2.0, "distribution": "normal", "mode": "fan_in", "seed": null}}, "kernel_size": [3, 3], "activation": "linear", "activity_regularizer": null, "name": "conv2d_8", "bias_constraint": null, "kernel_constraint": null, "kernel_regularizer": {"class_name": "L1L2", "config": {"l2": 9.999999747378752e-05, "l1": 0.0}}, "data_format": "channels_last", "bias_regularizer": null, "use_bias": true, "dilation_rate": [1, 1], "padding": "same", "trainable": true, "strides": [2, 2]}, "inbound_nodes": [[["activation_5", 0, 0, {}]]]}, {"class_name": "BatchNormalization", "name": "batch_normalization_6", "config": {"epsilon": 0.001, "gamma_constraint": null, "momentum": 0.99, "beta_regularizer": null, "moving_mean_initializer": {"class_name": "Zeros", "config": {}}, "name": "batch_normalization_6", "center": true, "gamma_regularizer": null, "beta_initializer": {"class_name": "Zeros", "config": {}}, "axis": -1, "gamma_initializer": {"class_name": "Ones", "config": {}}, "scale": true, "moving_variance_initializer": {"class_name": "Ones", "config": {}}, "trainable": true, "beta_constraint": null}, "inbound_nodes": [[["conv2d_8", 0, 0, {}]]]}, {"class_name": "Activation", "name": "activation_6", "config": {"activation": "relu", "trainable": true, "name": "activation_6"}, "inbound_nodes": [[["batch_normalization_6", 0, 0, {}]]]}, {"class_name": "Conv2D", "name": "conv2d_10", "config": {"bias_initializer": {"class_name": "Zeros", "config": {}}, "filters": 128, "kernel_initializer": {"class_name": "VarianceScaling", "config": {"scale": 1.0, "distribution": "uniform", "mode": "fan_avg", "seed": null}}, "kernel_size": [1, 1], "activation": "linear", "activity_regularizer": null, "name": "conv2d_10", "bias_constraint": null, "kernel_constraint": null, "kernel_regularizer": null, "data_format": "channels_last", "bias_regularizer": null, "use_bias": true, "dilation_rate": [1, 1], "padding": "same", "trainable": true, "strides": [2, 2]}, "inbound_nodes": [[["add_2", 0, 0, {}]]]}, {"class_name": "Conv2D", "name": "conv2d_9", "config": {"bias_initializer": {"class_name": "Zeros", "config": {}}, "filters": 128, "kernel_initializer": {"class_name": "VarianceScaling", "config": {"scale": 2.0, "distribution": "normal", "mode": "fan_in", "seed": null}}, "kernel_size": [3, 3], "activation": "linear", "activity_regularizer": null, "name": "conv2d_9", "bias_constraint": null, "kernel_constraint": null, "kernel_regularizer": {"class_name": "L1L2", "config": {"l2": 9.999999747378752e-05, "l1": 0.0}}, "data_format": "channels_last", "bias_regularizer": null, "use_bias": true, "dilation_rate": [1, 1], "padding": "same", "trainable": true, "strides": [1, 1]}, "inbound_nodes": [[["activation_6", 0, 0, {}]]]}, {"class_name": "Add", "name": "add_3", "config": {"name": "add_3", "trainable": true}, "inbound_nodes": [[["conv2d_10", 0, 0, {}], ["conv2d_9", 0, 0, {}]]]}, {"class_name": "Flatten", "name": "flatten_1", "config": {"name": "flatten_1", "trainable": true}, "inbound_nodes": [[["add_3", 0, 0, {}]]]}, {"class_name": "Activation", "name": "activation_7", "config": {"activation": "relu", "trainable": true, "name": "activation_7"}, "inbound_nodes": [[["flatten_1", 0, 0, {}]]]}, {"class_name": "Dropout", "name": "dropout_1", "config": {"name": "dropout_1", "rate": 0.5, "trainable": true}, "inbound_nodes": [[["activation_7", 0, 0, {}]]]}, {"class_name": "Dense", "name": "dense_2", "config": {"bias_initializer": {"class_name": "Zeros", "config": {}}, "kernel_initializer": {"class_name": "VarianceScaling", "config": {"scale": 1.0, "distribution": "uniform", "mode": "fan_avg", "seed": null}}, "activation": "linear", "activity_regularizer": null, "name": "dense_2", "units": 1, "kernel_constraint": null, "kernel_regularizer": null, "bias_regularizer": null, "use_bias": true, "trainable": true, "bias_constraint": null}, "inbound_nodes": [[["dropout_1", 0, 0, {}]]]}, {"class_name": "Dense", "name": "dense_1", "config": {"bias_initializer": {"class_name": "Zeros", "config": {}}, "kernel_initializer": {"class_name": "VarianceScaling", "config": {"scale": 1.0, "distribution": "uniform", "mode": "fan_avg", "seed": null}}, "activation": "linear", "activity_regularizer": null, "name": "dense_1", "units": 1, "kernel_constraint": null, "kernel_regularizer": null, "bias_regularizer": null, "use_bias": true, "trainable": true, "bias_constraint": null}, "inbound_nodes": [[["dropout_1", 0, 0, {}]]]}, {"class_name": "Activation", "name": "activation_8", "config": {"activation": "sigmoid", "trainable": true, "name": "activation_8"}, "inbound_nodes": [[["dense_2", 0, 0, {}]]]}]}}
\ No newline at end of file
+{"class_name": "Model", "keras_version": "2.2.4", "config": {"layers": [{"class_name": "InputLayer", "config": {"dtype": "float32", "batch_input_shape": [null, 200, 200, 1], "name": "input_1", "sparse": false}, "inbound_nodes": [], "name": "input_1"}, {"class_name": "Conv2D", "config": {"kernel_constraint": null, "kernel_initializer": {"class_name": "VarianceScaling", "config": {"distribution": "uniform", "scale": 1.0, "seed": null, "mode": "fan_avg"}}, "name": "conv2d_1", "bias_regularizer": null, "bias_constraint": null, "activation": "linear", "trainable": true, "data_format": "channels_last", "padding": "same", "strides": [2, 2], "dilation_rate": [1, 1], "kernel_regularizer": null, "filters": 32, "bias_initializer": {"class_name": "Zeros", "config": {}}, "use_bias": true, "activity_regularizer": null, "kernel_size": [5, 5]}, "inbound_nodes": [[["input_1", 0, 0, {}]]], "name": "conv2d_1"}, {"class_name": "MaxPooling2D", "config": {"name": "max_pooling2d_1", "trainable": true, "data_format": "channels_last", "pool_size": [3, 3], "padding": "valid", "strides": [2, 2]}, "inbound_nodes": [[["conv2d_1", 0, 0, {}]]], "name": "max_pooling2d_1"}, {"class_name": "BatchNormalization", "config": {"beta_constraint": null, "gamma_initializer": {"class_name": "Ones", "config": {}}, "moving_mean_initializer": {"class_name": "Zeros", "config": {}}, "name": "batch_normalization_1", "epsilon": 0.001, "trainable": true, "moving_variance_initializer": {"class_name": "Ones", "config": {}}, "beta_initializer": {"class_name": "Zeros", "config": {}}, "scale": true, "axis": -1, "gamma_constraint": null, "gamma_regularizer": null, "beta_regularizer": null, "momentum": 0.99, "center": true}, "inbound_nodes": [[["max_pooling2d_1", 0, 0, {}]]], "name": "batch_normalization_1"}, {"class_name": "Activation", "config": {"activation": "relu", "trainable": true, "name": "activation_1"}, "inbound_nodes": [[["batch_normalization_1", 0, 0, {}]]], "name": "activation_1"}, {"class_name": "Conv2D", "config": {"kernel_constraint": null, "kernel_initializer": {"class_name": "VarianceScaling", "config": {"distribution": "normal", "scale": 2.0, "seed": null, "mode": "fan_in"}}, "name": "conv2d_2", "bias_regularizer": null, "bias_constraint": null, "activation": "linear", "trainable": true, "data_format": "channels_last", "padding": "same", "strides": [2, 2], "dilation_rate": [1, 1], "kernel_regularizer": {"class_name": "L1L2", "config": {"l2": 9.999999747378752e-05, "l1": 0.0}}, "filters": 32, "bias_initializer": {"class_name": "Zeros", "config": {}}, "use_bias": true, "activity_regularizer": null, "kernel_size": [3, 3]}, "inbound_nodes": [[["activation_1", 0, 0, {}]]], "name": "conv2d_2"}, {"class_name": "BatchNormalization", "config": {"beta_constraint": null, "gamma_initializer": {"class_name": "Ones", "config": {}}, "moving_mean_initializer": {"class_name": "Zeros", "config": {}}, "name": "batch_normalization_2", "epsilon": 0.001, "trainable": true, "moving_variance_initializer": {"class_name": "Ones", "config": {}}, "beta_initializer": {"class_name": "Zeros", "config": {}}, "scale": true, "axis": -1, "gamma_constraint": null, "gamma_regularizer": null, "beta_regularizer": null, "momentum": 0.99, "center": true}, "inbound_nodes": [[["conv2d_2", 0, 0, {}]]], "name": "batch_normalization_2"}, {"class_name": "Activation", "config": {"activation": "relu", "trainable": true, "name": "activation_2"}, "inbound_nodes": [[["batch_normalization_2", 0, 0, {}]]], "name": "activation_2"}, {"class_name": "Conv2D", "config": {"kernel_constraint": null, "kernel_initializer": {"class_name": "VarianceScaling", "config": {"distribution": "uniform", "scale": 1.0, "seed": null, "mode": "fan_avg"}}, "name": "conv2d_4", "bias_regularizer": null, "bias_constraint": null, "activation": "linear", "trainable": true, "data_format": "channels_last", "padding": "same", "strides": [2, 2], "dilation_rate": [1, 1], "kernel_regularizer": null, "filters": 32, "bias_initializer": {"class_name": "Zeros", "config": {}}, "use_bias": true, "activity_regularizer": null, "kernel_size": [1, 1]}, "inbound_nodes": [[["max_pooling2d_1", 0, 0, {}]]], "name": "conv2d_4"}, {"class_name": "Conv2D", "config": {"kernel_constraint": null, "kernel_initializer": {"class_name": "VarianceScaling", "config": {"distribution": "normal", "scale": 2.0, "seed": null, "mode": "fan_in"}}, "name": "conv2d_3", "bias_regularizer": null, "bias_constraint": null, "activation": "linear", "trainable": true, "data_format": "channels_last", "padding": "same", "strides": [1, 1], "dilation_rate": [1, 1], "kernel_regularizer": {"class_name": "L1L2", "config": {"l2": 9.999999747378752e-05, "l1": 0.0}}, "filters": 32, "bias_initializer": {"class_name": "Zeros", "config": {}}, "use_bias": true, "activity_regularizer": null, "kernel_size": [3, 3]}, "inbound_nodes": [[["activation_2", 0, 0, {}]]], "name": "conv2d_3"}, {"class_name": "Add", "config": {"trainable": true, "name": "add_1"}, "inbound_nodes": [[["conv2d_4", 0, 0, {}], ["conv2d_3", 0, 0, {}]]], "name": "add_1"}, {"class_name": "BatchNormalization", "config": {"beta_constraint": null, "gamma_initializer": {"class_name": "Ones", "config": {}}, "moving_mean_initializer": {"class_name": "Zeros", "config": {}}, "name": "batch_normalization_3", "epsilon": 0.001, "trainable": true, "moving_variance_initializer": {"class_name": "Ones", "config": {}}, "beta_initializer": {"class_name": "Zeros", "config": {}}, "scale": true, "axis": -1, "gamma_constraint": null, "gamma_regularizer": null, "beta_regularizer": null, "momentum": 0.99, "center": true}, "inbound_nodes": [[["add_1", 0, 0, {}]]], "name": "batch_normalization_3"}, {"class_name": "Activation", "config": {"activation": "relu", "trainable": true, "name": "activation_3"}, "inbound_nodes": [[["batch_normalization_3", 0, 0, {}]]], "name": "activation_3"}, {"class_name": "Conv2D", "config": {"kernel_constraint": null, "kernel_initializer": {"class_name": "VarianceScaling", "config": {"distribution": "normal", "scale": 2.0, "seed": null, "mode": "fan_in"}}, "name": "conv2d_5", "bias_regularizer": null, "bias_constraint": null, "activation": "linear", "trainable": true, "data_format": "channels_last", "padding": "same", "strides": [2, 2], "dilation_rate": [1, 1], "kernel_regularizer": {"class_name": "L1L2", "config": {"l2": 9.999999747378752e-05, "l1": 0.0}}, "filters": 64, "bias_initializer": {"class_name": "Zeros", "config": {}}, "use_bias": true, "activity_regularizer": null, "kernel_size": [3, 3]}, "inbound_nodes": [[["activation_3", 0, 0, {}]]], "name": "conv2d_5"}, {"class_name": "BatchNormalization", "config": {"beta_constraint": null, "gamma_initializer": {"class_name": "Ones", "config": {}}, "moving_mean_initializer": {"class_name": "Zeros", "config": {}}, "name": "batch_normalization_4", "epsilon": 0.001, "trainable": true, "moving_variance_initializer": {"class_name": "Ones", "config": {}}, "beta_initializer": {"class_name": "Zeros", "config": {}}, "scale": true, "axis": -1, "gamma_constraint": null, "gamma_regularizer": null, "beta_regularizer": null, "momentum": 0.99, "center": true}, "inbound_nodes": [[["conv2d_5", 0, 0, {}]]], "name": "batch_normalization_4"}, {"class_name": "Activation", "config": {"activation": "relu", "trainable": true, "name": "activation_4"}, "inbound_nodes": [[["batch_normalization_4", 0, 0, {}]]], "name": "activation_4"}, {"class_name": "Conv2D", "config": {"kernel_constraint": null, "kernel_initializer": {"class_name": "VarianceScaling", "config": {"distribution": "uniform", "scale": 1.0, "seed": null, "mode": "fan_avg"}}, "name": "conv2d_7", "bias_regularizer": null, "bias_constraint": null, "activation": "linear", "trainable": true, "data_format": "channels_last", "padding": "same", "strides": [2, 2], "dilation_rate": [1, 1], "kernel_regularizer": null, "filters": 64, "bias_initializer": {"class_name": "Zeros", "config": {}}, "use_bias": true, "activity_regularizer": null, "kernel_size": [1, 1]}, "inbound_nodes": [[["add_1", 0, 0, {}]]], "name": "conv2d_7"}, {"class_name": "Conv2D", "config": {"kernel_constraint": null, "kernel_initializer": {"class_name": "VarianceScaling", "config": {"distribution": "normal", "scale": 2.0, "seed": null, "mode": "fan_in"}}, "name": "conv2d_6", "bias_regularizer": null, "bias_constraint": null, "activation": "linear", "trainable": true, "data_format": "channels_last", "padding": "same", "strides": [1, 1], "dilation_rate": [1, 1], "kernel_regularizer": {"class_name": "L1L2", "config": {"l2": 9.999999747378752e-05, "l1": 0.0}}, "filters": 64, "bias_initializer": {"class_name": "Zeros", "config": {}}, "use_bias": true, "activity_regularizer": null, "kernel_size": [3, 3]}, "inbound_nodes": [[["activation_4", 0, 0, {}]]], "name": "conv2d_6"}, {"class_name": "Add", "config": {"trainable": true, "name": "add_2"}, "inbound_nodes": [[["conv2d_7", 0, 0, {}], ["conv2d_6", 0, 0, {}]]], "name": "add_2"}, {"class_name": "BatchNormalization", "config": {"beta_constraint": null, "gamma_initializer": {"class_name": "Ones", "config": {}}, "moving_mean_initializer": {"class_name": "Zeros", "config": {}}, "name": "batch_normalization_5", "epsilon": 0.001, "trainable": true, "moving_variance_initializer": {"class_name": "Ones", "config": {}}, "beta_initializer": {"class_name": "Zeros", "config": {}}, "scale": true, "axis": -1, "gamma_constraint": null, "gamma_regularizer": null, "beta_regularizer": null, "momentum": 0.99, "center": true}, "inbound_nodes": [[["add_2", 0, 0, {}]]], "name": "batch_normalization_5"}, {"class_name": "Activation", "config": {"activation": "relu", "trainable": true, "name": "activation_5"}, "inbound_nodes": [[["batch_normalization_5", 0, 0, {}]]], "name": "activation_5"}, {"class_name": "Conv2D", "config": {"kernel_constraint": null, "kernel_initializer": {"class_name": "VarianceScaling", "config": {"distribution": "normal", "scale": 2.0, "seed": null, "mode": "fan_in"}}, "name": "conv2d_8", "bias_regularizer": null, "bias_constraint": null, "activation": "linear", "trainable": true, "data_format": "channels_last", "padding": "same", "strides": [2, 2], "dilation_rate": [1, 1], "kernel_regularizer": {"class_name": "L1L2", "config": {"l2": 9.999999747378752e-05, "l1": 0.0}}, "filters": 128, "bias_initializer": {"class_name": "Zeros", "config": {}}, "use_bias": true, "activity_regularizer": null, "kernel_size": [3, 3]}, "inbound_nodes": [[["activation_5", 0, 0, {}]]], "name": "conv2d_8"}, {"class_name": "BatchNormalization", "config": {"beta_constraint": null, "gamma_initializer": {"class_name": "Ones", "config": {}}, "moving_mean_initializer": {"class_name": "Zeros", "config": {}}, "name": "batch_normalization_6", "epsilon": 0.001, "trainable": true, "moving_variance_initializer": {"class_name": "Ones", "config": {}}, "beta_initializer": {"class_name": "Zeros", "config": {}}, "scale": true, "axis": -1, "gamma_constraint": null, "gamma_regularizer": null, "beta_regularizer": null, "momentum": 0.99, "center": true}, "inbound_nodes": [[["conv2d_8", 0, 0, {}]]], "name": "batch_normalization_6"}, {"class_name": "Activation", "config": {"activation": "relu", "trainable": true, "name": "activation_6"}, "inbound_nodes": [[["batch_normalization_6", 0, 0, {}]]], "name": "activation_6"}, {"class_name": "Conv2D", "config": {"kernel_constraint": null, "kernel_initializer": {"class_name": "VarianceScaling", "config": {"distribution": "uniform", "scale": 1.0, "seed": null, "mode": "fan_avg"}}, "name": "conv2d_10", "bias_regularizer": null, "bias_constraint": null, "activation": "linear", "trainable": true, "data_format": "channels_last", "padding": "same", "strides": [2, 2], "dilation_rate": [1, 1], "kernel_regularizer": null, "filters": 128, "bias_initializer": {"class_name": "Zeros", "config": {}}, "use_bias": true, "activity_regularizer": null, "kernel_size": [1, 1]}, "inbound_nodes": [[["add_2", 0, 0, {}]]], "name": "conv2d_10"}, {"class_name": "Conv2D", "config": {"kernel_constraint": null, "kernel_initializer": {"class_name": "VarianceScaling", "config": {"distribution": "normal", "scale": 2.0, "seed": null, "mode": "fan_in"}}, "name": "conv2d_9", "bias_regularizer": null, "bias_constraint": null, "activation": "linear", "trainable": true, "data_format": "channels_last", "padding": "same", "strides": [1, 1], "dilation_rate": [1, 1], "kernel_regularizer": {"class_name": "L1L2", "config": {"l2": 9.999999747378752e-05, "l1": 0.0}}, "filters": 128, "bias_initializer": {"class_name": "Zeros", "config": {}}, "use_bias": true, "activity_regularizer": null, "kernel_size": [3, 3]}, "inbound_nodes": [[["activation_6", 0, 0, {}]]], "name": "conv2d_9"}, {"class_name": "Add", "config": {"trainable": true, "name": "add_3"}, "inbound_nodes": [[["conv2d_10", 0, 0, {}], ["conv2d_9", 0, 0, {}]]], "name": "add_3"}, {"class_name": "Flatten", "config": {"trainable": true, "name": "flatten_1", "data_format": "channels_last"}, "inbound_nodes": [[["add_3", 0, 0, {}]]], "name": "flatten_1"}, {"class_name": "Activation", "config": {"activation": "relu", "trainable": true, "name": "activation_7"}, "inbound_nodes": [[["flatten_1", 0, 0, {}]]], "name": "activation_7"}, {"class_name": "Dropout", "config": {"rate": 0.5, "noise_shape": null, "trainable": true, "seed": null, "name": "dropout_1"}, "inbound_nodes": [[["activation_7", 0, 0, {}]]], "name": "dropout_1"}, {"class_name": "Dense", "config": {"kernel_initializer": {"class_name": "VarianceScaling", "config": {"distribution": "uniform", "scale": 1.0, "seed": null, "mode": "fan_avg"}}, "name": "dense_2", "kernel_constraint": null, "bias_regularizer": null, "bias_constraint": null, "activation": "linear", "trainable": true, "kernel_regularizer": null, "bias_initializer": {"class_name": "Zeros", "config": {}}, "units": 1, "use_bias": true, "activity_regularizer": null}, "inbound_nodes": [[["dropout_1", 0, 0, {}]]], "name": "dense_2"}, {"class_name": "Dense", "config": {"kernel_initializer": {"class_name": "VarianceScaling", "config": {"distribution": "uniform", "scale": 1.0, "seed": null, "mode": "fan_avg"}}, "name": "dense_1", "kernel_constraint": null, "bias_regularizer": null, "bias_constraint": null, "activation": "linear", "trainable": true, "kernel_regularizer": null, "bias_initializer": {"class_name": "Zeros", "config": {}}, "units": 1, "use_bias": true, "activity_regularizer": null}, "inbound_nodes": [[["dropout_1", 0, 0, {}]]], "name": "dense_1"}, {"class_name": "Activation", "config": {"activation": "sigmoid", "trainable": true, "name": "activation_8"}, "inbound_nodes": [[["dense_2", 0, 0, {}]]], "name": "activation_8"}], "input_layers": [["input_1", 0, 0]], "output_layers": [["dense_1", 0, 0], ["activation_8", 0, 0]], "name": "model_1"}, "backend": "tensorflow"}
\ No newline at end of file
diff --git a/utils.py b/utils.py
index e8d036a..0b60a49 100644
--- a/utils.py
+++ b/utils.py
@@ -1,3 +1,6 @@
+#!usr/bin/env python2
+#!coding=utf-8
+
 import re
 import os
 import numpy as np
@@ -13,6 +16,7 @@ from keras.models import model_from_json
 import img_utils
 
 
+# 继承之后，子类就全部拥有了父类中的方法和属性.比如数据增强的一些方法
 class DroneDataGenerator(ImageDataGenerator):
     """
     Generate minibatches of images and labels with real-time augmentation.
@@ -33,7 +37,7 @@ class DroneDataGenerator(ImageDataGenerator):
                 batch_size=batch_size, shuffle=shuffle, seed=seed,
                 follow_links=follow_links)
 
-
+# 继承了keras的迭代器
 class DroneDirectoryIterator(Iterator):
     """
     Class for managing data loading.of images and labels
@@ -77,6 +81,7 @@ class DroneDirectoryIterator(Iterator):
                              '; expected "rgb" or "grayscale".')
         self.color_mode = color_mode
         if self.color_mode == 'rgb':
+            # list相加,是拼起来,增加了维度
             self.image_shape = self.crop_size + (3,)
         else:
             self.image_shape = self.crop_size + (1,)
@@ -101,15 +106,20 @@ class DroneDirectoryIterator(Iterator):
 
         for subdir in experiments:
             subpath = os.path.join(directory, subdir)
+            # 读取所有图片,保存路径及其label和它的数据集类别,计数
             self._decode_experiment_dir(subpath)
 
         # Conversion of list into array
+        # floatx:float32
         self.ground_truth = np.array(self.ground_truth, dtype = K.floatx())
 
         assert self.samples > 0, "Did not find any data"
 
         print('Found {} images belonging to {} experiments.'.format(
                 self.samples, self.num_experiments))
+        # super用于调用父类的的一个方法
+        # 此处调用的是Iterator.__init__()这个方法
+        # 此处应该就是
         super(DroneDirectoryIterator, self).__init__(self.samples,
                 batch_size, shuffle, seed)
 
@@ -119,17 +129,20 @@ class DroneDirectoryIterator(Iterator):
 
     def _decode_experiment_dir(self, dir_subpath):
         # Load steerings or labels in the experiment dir
+        # 优达学城的数据集
         steerings_filename = os.path.join(dir_subpath, "sync_steering.txt")
+        # 苏黎世自制数据集
         labels_filename = os.path.join(dir_subpath, "labels.txt")
 
         # Try to load steerings first. Make sure that the steering angle or the
         # label file is in the first column. Note also that the first line are
         # comments so it should be skipped.
+        # 判断是哪种数据
+
         try:
-            ground_truth = np.loadtxt(steerings_filename, usecols=0,
-                                  delimiter=',', skiprows=1)
+            ground_truth = np.loadtxt(steerings_filename, usecols=0, delimiter=',', skiprows=1)
             exp_type = 1
-        except OSError as e:
+        except IOError as e:
             # Try load collision labels if there are no steerings
             try:
                 ground_truth = np.loadtxt(labels_filename, usecols=0)
@@ -141,10 +154,11 @@ class DroneDirectoryIterator(Iterator):
 
 
         # Now fetch all images in the image subdir
+        # 读取所有图片,保存路径及其label和它的数据集类别,计数
         image_dir_path = os.path.join(dir_subpath, "images")
         for root, _, files in self._recursive_list(image_dir_path):
             sorted_files = sorted(files,
-                    key = lambda fname: int(re.search(r'\d+',fname).group()))
+                    key = lambda fname: int(re.search(r'\d+',fname).group()))   # group()返回正则表达式,整体的结果
             for frame_number, fname in enumerate(sorted_files):
                 is_valid = False
                 for extension in self.formats:
